version: '3.8'

services:
  frontend:
    build: ./client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api

  backend:
    build: ./server
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/rehearsal_scheduler
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=1d
      - REFRESH_TOKEN_SECRET=your_refresh_token_secret
      - REFRESH_TOKEN_EXPIRES_IN=7d
      - CLIENT_URL=http://localhost:3000

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rehearsal_scheduler

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
